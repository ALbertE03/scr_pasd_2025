version: '3.8'

services:
  ray-head:
    image: rayproject/ray:2.8.0-py39  # Versión específica más ligera
    ports:
      - "8265:8265"  # Ray Dashboard
      - "10001:10001"  # Ray Client
    command: >
      ray start --head --port=10001 --dashboard-host=0.0.0.0 
      --num-cpus=2 --memory=1500000000 --object-store-memory=500000000
      --dashboard-agent-listen-port=52365
    volumes:
      - ./:/app
      - ./model_registry:/app/model_registry
    environment:
      - RAY_memory_monitor_refresh_ms=0
      - RAY_DISABLE_IMPORT_WARNING=1
      - RAY_USAGE_STATS_ENABLED=0
      - RAY_DEDUP_LOGS=1
    networks:
      - ml-network
    healthcheck:
      test: ["CMD-SHELL", "ray status || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 2
      start_period: 30s
    mem_limit: 2g
    cpus: 2

  ray-worker:
    image: rayproject/ray:2.8.0-py39
    depends_on:
      ray-head:
        condition: service_healthy
    command: >
      /bin/bash -c "
        while ! nc -z ray-head 10001; do
          echo 'Waiting for Ray head node...';
          sleep 3;
        done;
        ray start --address=ray-head:10001 --num-cpus=1 --memory=800000000 --object-store-memory=200000000
      "
    volumes:
      - ./:/app
      - ./model_registry:/app/model_registry
    environment:
      - RAY_DISABLE_IMPORT_WARNING=1
      - RAY_USAGE_STATS_ENABLED=0
      - RAY_DEDUP_LOGS=1
    networks:
      - ml-network
    deploy:
      replicas: 1  # Reducido de 2 a 1 worker
    mem_limit: 1g
    cpus: 1

  model-server:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./model_registry:/app/model_registry
      - ./data:/app/data
    depends_on:
      ray-head:
        condition: service_healthy
    environment:
      - RAY_ADDRESS=ray://ray-head:10001
      - RAY_DISABLE_IMPORT_WARNING=1
      - RAY_USAGE_STATS_ENABLED=0
      - PYTHONUNBUFFERED=1
    networks:
      - ml-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 45s
      timeout: 15s
      retries: 2
      start_period: 30s
    mem_limit: 1g
    cpus: 1

  streamlit-app:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./model_registry:/app/model_registry
      - ./data:/app/data
      - ./temp:/app/temp
    depends_on:
      ray-head:
        condition: service_healthy
      model-server:
        condition: service_healthy
    environment:
      - RAY_ADDRESS=ray://ray-head:10001
      - RAY_DISABLE_IMPORT_WARNING=1
      - RAY_USAGE_STATS_ENABLED=0
      - MODEL_SERVER_URL=http://model-server:8000
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
    networks:
      - ml-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8501/_stcore/health || exit 1"]
      interval: 60s
      timeout: 20s
      retries: 2
      start_period: 45s
    mem_limit: 1.5g
    cpus: 1.5

networks:
  ml-network:
    driver: bridge

volumes:
  model_registry:
  data:
  temp: